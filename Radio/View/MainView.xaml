<Window x:Class="Radio.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006 "
        xmlns:view="clr-namespace:Radio.View"
        xmlns:vm="clr-namespace:Radio.ViewModel"
        Title="Radio" MinWidth="1600" MinHeight="900">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="PowerButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <!--Power button icon and body-->
                            <Grid>
                                <Ellipse  VerticalAlignment="Center" HorizontalAlignment="Center" Height="200" Width="200">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FF5A5A5A" Offset="0.9"/>
                                            <GradientStop Color="#FF373737" Offset="0.95"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="PowerRing" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Height="120" Width="120"/>
                                <Ellipse  IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#FF5A5A5A" Height="100" Width="100"/>
                                <Rectangle IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF5A5A5A" Height="50" Width="30" Margin="20"/>
                                <Rectangle Name="PowerLine" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="Black" Height="30" Width="10" Margin="30"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                            <!--animation for pressing power button-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="PowerLine" Property="Fill" Value="LightGreen"/>
                                    <Setter TargetName="PowerRing" Property="Fill" Value="LightGreen"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--button style for speaker animations-->
            <Style x:Key="Speaker" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <!--Speaker body-->
                            <Grid>
                                <Ellipse VerticalAlignment="Center" HorizontalAlignment="Center" Height="500" Width="500">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FF333333" Offset="0.711"/>
                                            <GradientStop Color="Black" Offset="0.992"/>
                                            <GradientStop Color="#FF1B1B1B" Offset="0.173"/>
                                            <GradientStop Color="#FE0C0C0C" Offset="0.281"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                    <Ellipse.RenderTransform>
                                        <ScaleTransform CenterX="250" CenterY="250" ScaleX="1" ScaleY="1" x:Name="EllipseScaleTransform" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--Start animation when power button is turned on-->
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="AnimationX">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EllipseScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard x:Name="AnimationY">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EllipseScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0.8" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!--Stop animations when powerbutton is turned off-->
                                    <Trigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="AnimationX"/>
                                        <RemoveStoryboard BeginStoryboardName="AnimationY"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="RadioContent" Margin="10" Background="#FF80CEE1">

        <!--Speaker-->
        <Canvas HorizontalAlignment="Center" VerticalAlignment="Top" Margin="-1570,0,0,0">
            <Border Background="#FF292929" BorderBrush="Black" BorderThickness="40" Height="566" Width="1570" />
            <ToggleButton x:Name="Speaker1" Style="{StaticResource Speaker}" IsChecked="{Binding IsTurnedOn}" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Left="164" Canvas.Top="33"/>
            <ToggleButton x:Name="Speaker2" Style="{StaticResource Speaker}" IsChecked="{Binding IsTurnedOn}" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Left="920" Canvas.Top="33"/>
            <!--Mesh in front of speaker-->
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="60" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="120" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="180" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="240" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="300" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="360" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="420" VerticalAlignment="Top"></Line>
            <Line X1="0" X2="1570" Y1="20" Y2="20" StrokeThickness="30" Stroke="Black" HorizontalAlignment="Center" Canvas.Top="480" VerticalAlignment="Top"></Line>
        </Canvas>

        <!--PowerButton Section-->
        <ToggleButton x:Name="Power" 
                      Style="{StaticResource PowerButton}"
                      IsChecked="{Binding IsTurnedOn}" 
                      HorizontalAlignment="Left"
                      VerticalAlignment="Bottom" Margin="50,0,0,50">
        </ToggleButton>

        <!--Frequency Section-->
        <view:FrequencyView x:Name="Frequency" Margin="0,0,50,30" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
        <TextBlock Text="-" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,264,68" FontSize="40" IsHitTestVisible="False"/>
        <TextBlock Text="+" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,61,68" FontSize="40" IsHitTestVisible="False"/>
        <TextBlock Text="Frequency" VerticalAlignment="Bottom" Margin="0,0,126,23" HorizontalAlignment="Right" TextWrapping="Wrap"  FontSize="20"/>

        <!--Volume Section-->
        <view:DialView x:Name="VolumeDial" 
                   HorizontalAlignment="Left" 
                   VerticalAlignment="Bottom" 
                   Margin="360,0,0,50" 
                   MinAngle="-125" 
                   MaxAngle="125" 
                   MinValue="0"
                   MaxValue="100"
                   Value="{Binding Volume, Mode=TwoWay}"/>
        <TextBlock x:Name="VolumeValue" HorizontalAlignment="Left" Margin="410,0,0,86" TextWrapping="Wrap" Text="{Binding Volume, StringFormat=N0}" VerticalAlignment="Bottom" Width="100" Height="100" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" TextAlignment="Center" FontSize="50" Background="{x:Null}"/>
        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="427,0,0,23" TextWrapping="Wrap" Text="Volume" FontSize="20"/>
        <TextBlock Text="-" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="352,0,0,68" FontSize="40" IsHitTestVisible="False"/>
        <TextBlock Text="+" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="545,0,0,68" FontSize="40" IsHitTestVisible="False"/>
    </Grid>

</Window>
